/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 
 *
 * The version of the OpenAPI document: 1.19.28
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Creative;
import com.konfigthis.client.model.CreativeBase;
import com.konfigthis.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CreativesApi
 */
@Disabled
public class CreativesApiTest {

    private static CreativesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CreativesApi(apiClient);
    }

    /**
     * Create
     *
     * Creates a new creative with the provided properties
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        String xLangOutput = null;
        Creative response = api.create()
                .xLangOutput(xLangOutput)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve
     *
     * Retrieves the details of an existing creative. You need only supply the unique creative identifier that was returned upon creative creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveTest() throws ApiException {
        String crvId = null;
        Creative response = api.retrieve(crvId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update
     *
     * Update the details of an existing creative. You need only supply the unique identifier that was returned upon creative creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        String crvId = null;
        String description = null;
        Object from = null;
        Map<String, String> metadata = null;
        Creative response = api.update(crvId)
                .description(description)
                .from(from)
                .metadata(metadata)
                .execute();
        // TODO: test validations
    }

}
