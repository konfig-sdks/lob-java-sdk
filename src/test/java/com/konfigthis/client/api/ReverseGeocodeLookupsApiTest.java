/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 
 *
 * The version of the OpenAPI document: 1.19.28
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Error;
import com.konfigthis.client.model.Location;
import com.konfigthis.client.model.ReverseGeocode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReverseGeocodeLookupsApi
 */
@Disabled
public class ReverseGeocodeLookupsApiTest {

    private static ReverseGeocodeLookupsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ReverseGeocodeLookupsApi(apiClient);
    }

    /**
     * Reverse Geocode Lookup
     *
     * Reverse geocode a valid US location with a live API key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usLocationWithLiveApiKeyTest() throws ApiException {
        Float latitude = null;
        Float longitude = null;
        Integer size = null;
        ReverseGeocode response = api.usLocationWithLiveApiKey(latitude, longitude)
                .size(size)
                .execute();
        // TODO: test validations
    }

}
