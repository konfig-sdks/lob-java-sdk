/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 
 *
 * The version of the OpenAPI document: 1.19.28
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AddressPlacement;
import com.konfigthis.client.model.Buckslip;
import com.konfigthis.client.model.Card;
import com.konfigthis.client.model.CustomEnvelopeReturned;
import com.konfigthis.client.model.FailureReason;
import com.konfigthis.client.model.LtrUseType;
import com.konfigthis.client.model.MailType;
import com.konfigthis.client.model.Status;
import com.konfigthis.client.model.Thumbnail;
import com.konfigthis.client.model.TrackingEventNormal;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * NoExtraService
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class NoExtraService {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TRACKING_EVENTS = "tracking_events";
  @SerializedName(SERIALIZED_NAME_TRACKING_EVENTS)
  private List<TrackingEventNormal> trackingEvents = null;

  public static final String SERIALIZED_NAME_CARDS = "cards";
  @SerializedName(SERIALIZED_NAME_CARDS)
  private List<Card> cards = null;

  public static final String SERIALIZED_NAME_BUCKSLIPS = "buckslips";
  @SerializedName(SERIALIZED_NAME_BUCKSLIPS)
  private List<Buckslip> buckslips = null;

  public static final String SERIALIZED_NAME_RETURN_ADDRESS = "return_address";
  @SerializedName(SERIALIZED_NAME_RETURN_ADDRESS)
  private Object returnAddress = null;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = null;

  public static final String SERIALIZED_NAME_MERGE_VARIABLES = "merge_variables";
  @SerializedName(SERIALIZED_NAME_MERGE_VARIABLES)
  private String mergeVariables;

  public static final String SERIALIZED_NAME_SEND_DATE = "send_date";
  @SerializedName(SERIALIZED_NAME_SEND_DATE)
  private Object sendDate = null;

  public static final String SERIALIZED_NAME_MAIL_TYPE = "mail_type";
  @SerializedName(SERIALIZED_NAME_MAIL_TYPE)
  private MailType mailType = MailType.FIRST_CLASS;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private Boolean color;

  public static final String SERIALIZED_NAME_DOUBLE_SIDED = "double_sided";
  @SerializedName(SERIALIZED_NAME_DOUBLE_SIDED)
  private Boolean doubleSided = true;

  public static final String SERIALIZED_NAME_ADDRESS_PLACEMENT = "address_placement";
  @SerializedName(SERIALIZED_NAME_ADDRESS_PLACEMENT)
  private AddressPlacement addressPlacement = AddressPlacement.TOP_FIRST_PAGE;

  public static final String SERIALIZED_NAME_RETURN_ENVELOPE = "return_envelope";
  @SerializedName(SERIALIZED_NAME_RETURN_ENVELOPE)
  private Object returnEnvelope = null;

  public static final String SERIALIZED_NAME_PERFORATED_PAGE = "perforated_page";
  @SerializedName(SERIALIZED_NAME_PERFORATED_PAGE)
  private Integer perforatedPage;

  public static final String SERIALIZED_NAME_CUSTOM_ENVELOPE = "custom_envelope";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ENVELOPE)
  private CustomEnvelopeReturned customEnvelope;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private Object to = null;

  /**
   * Gets or Sets carrier
   */
  @JsonAdapter(CarrierEnum.Adapter.class)
 public enum CarrierEnum {
    USPS("USPS");

    private String value;

    CarrierEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CarrierEnum fromValue(String value) {
      for (CarrierEnum b : CarrierEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CarrierEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CarrierEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CarrierEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CarrierEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CARRIER = "carrier";
  @SerializedName(SERIALIZED_NAME_CARRIER)
  private CarrierEnum carrier = CarrierEnum.USPS;

  public static final String SERIALIZED_NAME_THUMBNAILS = "thumbnails";
  @SerializedName(SERIALIZED_NAME_THUMBNAILS)
  private List<Thumbnail> thumbnails = null;

  public static final String SERIALIZED_NAME_EXPECTED_DELIVERY_DATE = "expected_delivery_date";
  @SerializedName(SERIALIZED_NAME_EXPECTED_DELIVERY_DATE)
  private LocalDate expectedDeliveryDate;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_MODIFIED = "date_modified";
  @SerializedName(SERIALIZED_NAME_DATE_MODIFIED)
  private OffsetDateTime dateModified;

  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private Boolean deleted;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private Object from = null;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private Object templateId;

  public static final String SERIALIZED_NAME_TEMPLATE_VERSION_ID = "template_version_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_VERSION_ID)
  private String templateVersionId;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaign_id";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private String campaignId;

  public static final String SERIALIZED_NAME_USE_TYPE = "use_type";
  @SerializedName(SERIALIZED_NAME_USE_TYPE)
  private LtrUseType useType;

  public static final String SERIALIZED_NAME_FSC = "fsc";
  @SerializedName(SERIALIZED_NAME_FSC)
  private Boolean fsc = false;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Status status;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "failure_reason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private FailureReason failureReason;

  /**
   * Value is resource type.
   */
  @JsonAdapter(ObjectEnum.Adapter.class)
 public enum ObjectEnum {
    LETTER("letter");

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjectEnum fromValue(String value) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ObjectEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjectEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ObjectEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private ObjectEnum _object = ObjectEnum.LETTER;

  public NoExtraService() {
  }

  public NoExtraService description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * An internal description that identifies this resource. Must be no longer than 255 characters. 
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Harry - Office", value = "An internal description that identifies this resource. Must be no longer than 255 characters. ")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public NoExtraService trackingEvents(List<TrackingEventNormal> trackingEvents) {
    
    
    
    
    this.trackingEvents = trackingEvents;
    return this;
  }

  public NoExtraService addTrackingEventsItem(TrackingEventNormal trackingEventsItem) {
    if (this.trackingEvents == null) {
      this.trackingEvents = new ArrayList<>();
    }
    this.trackingEvents.add(trackingEventsItem);
    return this;
  }

   /**
   * An array of tracking events ordered by ascending &#x60;time&#x60;.
   * @return trackingEvents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of tracking events ordered by ascending `time`.")

  public List<TrackingEventNormal> getTrackingEvents() {
    return trackingEvents;
  }


  public void setTrackingEvents(List<TrackingEventNormal> trackingEvents) {
    
    
    
    this.trackingEvents = trackingEvents;
  }


  public NoExtraService cards(List<Card> cards) {
    
    
    
    
    this.cards = cards;
    return this;
  }

  public NoExtraService addCardsItem(Card cardsItem) {
    if (this.cards == null) {
      this.cards = new ArrayList<>();
    }
    this.cards.add(cardsItem);
    return this;
  }

   /**
   * An array of cards associated with a specific letter
   * @return cards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of cards associated with a specific letter")

  public List<Card> getCards() {
    return cards;
  }


  public void setCards(List<Card> cards) {
    
    
    
    this.cards = cards;
  }


  public NoExtraService buckslips(List<Buckslip> buckslips) {
    
    
    
    
    this.buckslips = buckslips;
    return this;
  }

  public NoExtraService addBuckslipsItem(Buckslip buckslipsItem) {
    if (this.buckslips == null) {
      this.buckslips = new ArrayList<>();
    }
    this.buckslips.add(buckslipsItem);
    return this;
  }

   /**
   * An array of buckslip(s) associated with a specific letter
   * @return buckslips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of buckslip(s) associated with a specific letter")

  public List<Buckslip> getBuckslips() {
    return buckslips;
  }


  public void setBuckslips(List<Buckslip> buckslips) {
    
    
    
    this.buckslips = buckslips;
  }


  public NoExtraService returnAddress(Object returnAddress) {
    
    
    
    
    this.returnAddress = returnAddress;
    return this;
  }

   /**
   * Get returnAddress
   * @return returnAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getReturnAddress() {
    return returnAddress;
  }


  public void setReturnAddress(Object returnAddress) {
    
    
    
    this.returnAddress = returnAddress;
  }


  public NoExtraService metadata(Map<String, String> metadata) {
    
    
    
    
    this.metadata = metadata;
    return this;
  }

  public NoExtraService putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters &#x60;\&quot;&#x60; and &#x60;\\&#x60;. i.e. &#39;{\&quot;customer_id\&quot; : \&quot;NEWYORK2015\&quot;}&#39; Nested objects are not supported.  See [Metadata](#section/Metadata) for more information.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information.")

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    
    
    
    this.metadata = metadata;
  }


  public NoExtraService mergeVariables(String mergeVariables) {
    
    
    
    
    this.mergeVariables = mergeVariables;
    return this;
  }

   /**
   * You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: &#x60;{{variable_name}}&#x60;, pass in &#x60;{\&quot;variable_name\&quot;: \&quot;Harry\&quot;}&#x60; to render &#x60;Harry&#x60;. &#x60;merge_variables&#x60; must be an object. Any type of value is accepted as long as the object is valid JSON; you can use &#x60;strings&#x60;, &#x60;numbers&#x60;, &#x60;booleans&#x60;, &#x60;arrays&#x60;, &#x60;objects&#x60;, or &#x60;null&#x60;. The max length of the object is 25,000 characters. If you call &#x60;JSON.stringify&#x60; on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: &#x60;!&#x60;, &#x60;\&quot;&#x60;, &#x60;#&#x60;, &#x60;%&#x60;, &#x60;&amp;&#x60;, &#x60;&#39;&#x60;, &#x60;(&#x60;, &#x60;)&#x60;, &#x60;*&#x60;, &#x60;+&#x60;, &#x60;,&#x60;, &#x60;/&#x60;, &#x60;;&#x60;, &#x60;&lt;&#x60;, &#x60;&#x3D;&#x60;, &#x60;&gt;&#x60;, &#x60;@&#x60;, &#x60;[&#x60;, &#x60;\\&#x60;, &#x60;]&#x60;, &#x60;^&#x60;, &#x60;&#x60; &#x60; &#x60;&#x60;, &#x60;{&#x60;, &#x60;|&#x60;, &#x60;}&#x60;, &#x60;~&#x60;. More instructions can be found in &lt;a href&#x3D;\&quot;https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\&quot; target&#x3D;\&quot;_blank\&quot;&gt;our guide to using html and merge variables&lt;/a&gt;. Depending on your &lt;a href&#x3D;\&quot;https://dashboard.lob.com/#/settings/account\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Merge Variable strictness&lt;/a&gt; setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string.
   * @return mergeVariables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string.")

  public String getMergeVariables() {
    return mergeVariables;
  }


  public void setMergeVariables(String mergeVariables) {
    
    
    
    this.mergeVariables = mergeVariables;
  }


  public NoExtraService sendDate(Object sendDate) {
    
    
    
    
    this.sendDate = sendDate;
    return this;
  }

   /**
   * Get sendDate
   * @return sendDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSendDate() {
    return sendDate;
  }


  public void setSendDate(Object sendDate) {
    
    
    
    this.sendDate = sendDate;
  }


  public NoExtraService mailType(MailType mailType) {
    
    
    
    
    this.mailType = mailType;
    return this;
  }

   /**
   * Get mailType
   * @return mailType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MailType getMailType() {
    return mailType;
  }


  public void setMailType(MailType mailType) {
    
    
    
    this.mailType = mailType;
  }


  public NoExtraService color(Boolean color) {
    
    
    
    
    this.color = color;
    return this;
  }

   /**
   * Set this key to &#x60;true&#x60; if you would like to print in color. Set to &#x60;false&#x60; if you would like to print in black and white.
   * @return color
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white.")

  public Boolean getColor() {
    return color;
  }


  public void setColor(Boolean color) {
    
    
    
    this.color = color;
  }


  public NoExtraService doubleSided(Boolean doubleSided) {
    
    
    
    
    this.doubleSided = doubleSided;
    return this;
  }

   /**
   * Set this attribute to &#x60;true&#x60; for double sided printing, or &#x60;false&#x60; for for single sided printing. Defaults to &#x60;true&#x60;.
   * @return doubleSided
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.")

  public Boolean getDoubleSided() {
    return doubleSided;
  }


  public void setDoubleSided(Boolean doubleSided) {
    
    
    
    this.doubleSided = doubleSided;
  }


  public NoExtraService addressPlacement(AddressPlacement addressPlacement) {
    
    
    
    
    this.addressPlacement = addressPlacement;
    return this;
  }

   /**
   * Get addressPlacement
   * @return addressPlacement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AddressPlacement getAddressPlacement() {
    return addressPlacement;
  }


  public void setAddressPlacement(AddressPlacement addressPlacement) {
    
    
    
    this.addressPlacement = addressPlacement;
  }


  public NoExtraService returnEnvelope(Object returnEnvelope) {
    
    
    
    
    this.returnEnvelope = returnEnvelope;
    return this;
  }

   /**
   * Get returnEnvelope
   * @return returnEnvelope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getReturnEnvelope() {
    return returnEnvelope;
  }


  public void setReturnEnvelope(Object returnEnvelope) {
    
    
    
    this.returnEnvelope = returnEnvelope;
  }


  public NoExtraService perforatedPage(Integer perforatedPage) {
    
    
    
    
    this.perforatedPage = perforatedPage;
    return this;
  }

   /**
   * Required if &#x60;return_envelope&#x60; is &#x60;true&#x60;. The number of the page that should be perforated for use with the return envelope. Must be greater than or equal to &#x60;1&#x60;. The blank page added by &#x60;address_placement&#x3D;insert_blank_page&#x60; will be ignored when considering the perforated page number. To see how perforation will impact your letter design, view our &lt;a href&#x3D;\&quot;https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_perf_template.pdf\&quot; target&#x3D;\&quot;_blank\&quot;&gt;perforation guide&lt;/a&gt;.
   * @return perforatedPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required if `return_envelope` is `true`. The number of the page that should be perforated for use with the return envelope. Must be greater than or equal to `1`. The blank page added by `address_placement=insert_blank_page` will be ignored when considering the perforated page number. To see how perforation will impact your letter design, view our <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_perf_template.pdf\" target=\"_blank\">perforation guide</a>.")

  public Integer getPerforatedPage() {
    return perforatedPage;
  }


  public void setPerforatedPage(Integer perforatedPage) {
    
    
    
    this.perforatedPage = perforatedPage;
  }


  public NoExtraService customEnvelope(CustomEnvelopeReturned customEnvelope) {
    
    
    
    
    this.customEnvelope = customEnvelope;
    return this;
  }

   /**
   * Get customEnvelope
   * @return customEnvelope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomEnvelopeReturned getCustomEnvelope() {
    return customEnvelope;
  }


  public void setCustomEnvelope(CustomEnvelopeReturned customEnvelope) {
    
    
    
    this.customEnvelope = customEnvelope;
  }


  public NoExtraService to(Object to) {
    
    
    
    
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getTo() {
    return to;
  }


  public void setTo(Object to) {
    
    
    
    this.to = to;
  }


  public NoExtraService carrier(CarrierEnum carrier) {
    
    
    
    
    this.carrier = carrier;
    return this;
  }

   /**
   * Get carrier
   * @return carrier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "USPS", required = true, value = "")

  public CarrierEnum getCarrier() {
    return carrier;
  }


  public void setCarrier(CarrierEnum carrier) {
    
    
    
    this.carrier = carrier;
  }


  public NoExtraService thumbnails(List<Thumbnail> thumbnails) {
    
    
    
    
    this.thumbnails = thumbnails;
    return this;
  }

  public NoExtraService addThumbnailsItem(Thumbnail thumbnailsItem) {
    if (this.thumbnails == null) {
      this.thumbnails = new ArrayList<>();
    }
    this.thumbnails.add(thumbnailsItem);
    return this;
  }

   /**
   * Get thumbnails
   * @return thumbnails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Thumbnail> getThumbnails() {
    return thumbnails;
  }


  public void setThumbnails(List<Thumbnail> thumbnails) {
    
    
    
    this.thumbnails = thumbnails;
  }


  public NoExtraService expectedDeliveryDate(LocalDate expectedDeliveryDate) {
    
    
    
    
    this.expectedDeliveryDate = expectedDeliveryDate;
    return this;
  }

   /**
   * A date in YYYY-MM-DD format of the mailpiece&#39;s expected delivery date based on its &#x60;send_date&#x60;.
   * @return expectedDeliveryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its `send_date`.")

  public LocalDate getExpectedDeliveryDate() {
    return expectedDeliveryDate;
  }


  public void setExpectedDeliveryDate(LocalDate expectedDeliveryDate) {
    
    
    
    this.expectedDeliveryDate = expectedDeliveryDate;
  }


  public NoExtraService dateCreated(OffsetDateTime dateCreated) {
    
    
    
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * A timestamp in ISO 8601 format of the date the resource was created.
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A timestamp in ISO 8601 format of the date the resource was created.")

  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(OffsetDateTime dateCreated) {
    
    
    
    this.dateCreated = dateCreated;
  }


  public NoExtraService dateModified(OffsetDateTime dateModified) {
    
    
    
    
    this.dateModified = dateModified;
    return this;
  }

   /**
   * A timestamp in ISO 8601 format of the date the resource was last modified.
   * @return dateModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A timestamp in ISO 8601 format of the date the resource was last modified.")

  public OffsetDateTime getDateModified() {
    return dateModified;
  }


  public void setDateModified(OffsetDateTime dateModified) {
    
    
    
    this.dateModified = dateModified;
  }


  public NoExtraService deleted(Boolean deleted) {
    
    
    
    
    this.deleted = deleted;
    return this;
  }

   /**
   * Only returned if the resource has been successfully deleted.
   * @return deleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only returned if the resource has been successfully deleted.")

  public Boolean getDeleted() {
    return deleted;
  }


  public void setDeleted(Boolean deleted) {
    
    
    
    this.deleted = deleted;
  }


  public NoExtraService from(Object from) {
    
    
    
    
    this.from = from;
    return this;
  }

   /**
   * Get from
   * @return from
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getFrom() {
    return from;
  }


  public void setFrom(Object from) {
    
    
    
    this.from = from;
  }


  public NoExtraService url(String url) {
    
    
    
    
    this.url = url;
    return this;
  }

   /**
   * A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    
    
    
    this.url = url;
  }


  public NoExtraService id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier prefixed with &#x60;ltr_&#x60;.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unique identifier prefixed with `ltr_`.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public NoExtraService templateId(Object templateId) {
    
    
    
    
    this.templateId = templateId;
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTemplateId() {
    return templateId;
  }


  public void setTemplateId(Object templateId) {
    
    
    
    this.templateId = templateId;
  }


  public NoExtraService templateVersionId(String templateVersionId) {
    
    
    
    
    this.templateVersionId = templateVersionId;
    return this;
  }

   /**
   * Get templateVersionId
   * @return templateVersionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTemplateVersionId() {
    return templateVersionId;
  }


  public void setTemplateVersionId(String templateVersionId) {
    
    
    
    this.templateVersionId = templateVersionId;
  }


  public NoExtraService campaignId(String campaignId) {
    
    
    
    
    this.campaignId = campaignId;
    return this;
  }

   /**
   * Denotes resources created by the provided campaign id, prefixed with &#x60;cmp_&#x60;. In the case of snap packs and letters with size &#x60;us_legal&#x60;, the campaign id is prefixed with &#x60;camp_&#x60; instead of &#x60;cmp_&#x60;.
   * @return campaignId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Denotes resources created by the provided campaign id, prefixed with `cmp_`. In the case of snap packs and letters with size `us_legal`, the campaign id is prefixed with `camp_` instead of `cmp_`.")

  public String getCampaignId() {
    return campaignId;
  }


  public void setCampaignId(String campaignId) {
    
    
    
    this.campaignId = campaignId;
  }


  public NoExtraService useType(LtrUseType useType) {
    
    
    
    
    this.useType = useType;
    return this;
  }

   /**
   * Get useType
   * @return useType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public LtrUseType getUseType() {
    return useType;
  }


  public void setUseType(LtrUseType useType) {
    
    
    
    this.useType = useType;
  }


  public NoExtraService fsc(Boolean fsc) {
    
    
    
    
    this.fsc = fsc;
    return this;
  }

   /**
   * This is in beta. Contact support@lob.com or your account contact to learn more. Not available for &#x60;A4&#x60; letter size.
   * @return fsc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "This is in beta. Contact support@lob.com or your account contact to learn more. Not available for `A4` letter size.")

  public Boolean getFsc() {
    return fsc;
  }


  public void setFsc(Boolean fsc) {
    
    
    
    this.fsc = fsc;
  }


  public NoExtraService status(Status status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Status getStatus() {
    return status;
  }


  public void setStatus(Status status) {
    
    
    
    this.status = status;
  }


  public NoExtraService failureReason(FailureReason failureReason) {
    
    
    
    
    this.failureReason = failureReason;
    return this;
  }

   /**
   * Get failureReason
   * @return failureReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FailureReason getFailureReason() {
    return failureReason;
  }


  public void setFailureReason(FailureReason failureReason) {
    
    
    
    this.failureReason = failureReason;
  }


  public NoExtraService _object(ObjectEnum _object) {
    
    
    
    
    this._object = _object;
    return this;
  }

   /**
   * Value is resource type.
   * @return _object
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LETTER", value = "Value is resource type.")

  public ObjectEnum getObject() {
    return _object;
  }


  public void setObject(ObjectEnum _object) {
    
    
    
    this._object = _object;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the NoExtraService instance itself
   */
  public NoExtraService putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NoExtraService noExtraService = (NoExtraService) o;
    return Objects.equals(this.description, noExtraService.description) &&
        Objects.equals(this.trackingEvents, noExtraService.trackingEvents) &&
        Objects.equals(this.cards, noExtraService.cards) &&
        Objects.equals(this.buckslips, noExtraService.buckslips) &&
        Objects.equals(this.returnAddress, noExtraService.returnAddress) &&
        Objects.equals(this.metadata, noExtraService.metadata) &&
        Objects.equals(this.mergeVariables, noExtraService.mergeVariables) &&
        Objects.equals(this.sendDate, noExtraService.sendDate) &&
        Objects.equals(this.mailType, noExtraService.mailType) &&
        Objects.equals(this.color, noExtraService.color) &&
        Objects.equals(this.doubleSided, noExtraService.doubleSided) &&
        Objects.equals(this.addressPlacement, noExtraService.addressPlacement) &&
        Objects.equals(this.returnEnvelope, noExtraService.returnEnvelope) &&
        Objects.equals(this.perforatedPage, noExtraService.perforatedPage) &&
        Objects.equals(this.customEnvelope, noExtraService.customEnvelope) &&
        Objects.equals(this.to, noExtraService.to) &&
        Objects.equals(this.carrier, noExtraService.carrier) &&
        Objects.equals(this.thumbnails, noExtraService.thumbnails) &&
        Objects.equals(this.expectedDeliveryDate, noExtraService.expectedDeliveryDate) &&
        Objects.equals(this.dateCreated, noExtraService.dateCreated) &&
        Objects.equals(this.dateModified, noExtraService.dateModified) &&
        Objects.equals(this.deleted, noExtraService.deleted) &&
        Objects.equals(this.from, noExtraService.from) &&
        Objects.equals(this.url, noExtraService.url) &&
        Objects.equals(this.id, noExtraService.id) &&
        Objects.equals(this.templateId, noExtraService.templateId) &&
        Objects.equals(this.templateVersionId, noExtraService.templateVersionId) &&
        Objects.equals(this.campaignId, noExtraService.campaignId) &&
        Objects.equals(this.useType, noExtraService.useType) &&
        Objects.equals(this.fsc, noExtraService.fsc) &&
        Objects.equals(this.status, noExtraService.status) &&
        Objects.equals(this.failureReason, noExtraService.failureReason) &&
        Objects.equals(this._object, noExtraService._object)&&
        Objects.equals(this.additionalProperties, noExtraService.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, trackingEvents, cards, buckslips, returnAddress, metadata, mergeVariables, sendDate, mailType, color, doubleSided, addressPlacement, returnEnvelope, perforatedPage, customEnvelope, to, carrier, thumbnails, expectedDeliveryDate, dateCreated, dateModified, deleted, from, url, id, templateId, templateVersionId, campaignId, useType, fsc, status, failureReason, _object, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NoExtraService {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    trackingEvents: ").append(toIndentedString(trackingEvents)).append("\n");
    sb.append("    cards: ").append(toIndentedString(cards)).append("\n");
    sb.append("    buckslips: ").append(toIndentedString(buckslips)).append("\n");
    sb.append("    returnAddress: ").append(toIndentedString(returnAddress)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    mergeVariables: ").append(toIndentedString(mergeVariables)).append("\n");
    sb.append("    sendDate: ").append(toIndentedString(sendDate)).append("\n");
    sb.append("    mailType: ").append(toIndentedString(mailType)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    doubleSided: ").append(toIndentedString(doubleSided)).append("\n");
    sb.append("    addressPlacement: ").append(toIndentedString(addressPlacement)).append("\n");
    sb.append("    returnEnvelope: ").append(toIndentedString(returnEnvelope)).append("\n");
    sb.append("    perforatedPage: ").append(toIndentedString(perforatedPage)).append("\n");
    sb.append("    customEnvelope: ").append(toIndentedString(customEnvelope)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    thumbnails: ").append(toIndentedString(thumbnails)).append("\n");
    sb.append("    expectedDeliveryDate: ").append(toIndentedString(expectedDeliveryDate)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    templateVersionId: ").append(toIndentedString(templateVersionId)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    useType: ").append(toIndentedString(useType)).append("\n");
    sb.append("    fsc: ").append(toIndentedString(fsc)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("tracking_events");
    openapiFields.add("cards");
    openapiFields.add("buckslips");
    openapiFields.add("return_address");
    openapiFields.add("metadata");
    openapiFields.add("merge_variables");
    openapiFields.add("send_date");
    openapiFields.add("mail_type");
    openapiFields.add("color");
    openapiFields.add("double_sided");
    openapiFields.add("address_placement");
    openapiFields.add("return_envelope");
    openapiFields.add("perforated_page");
    openapiFields.add("custom_envelope");
    openapiFields.add("to");
    openapiFields.add("carrier");
    openapiFields.add("thumbnails");
    openapiFields.add("expected_delivery_date");
    openapiFields.add("date_created");
    openapiFields.add("date_modified");
    openapiFields.add("deleted");
    openapiFields.add("from");
    openapiFields.add("url");
    openapiFields.add("id");
    openapiFields.add("template_id");
    openapiFields.add("template_version_id");
    openapiFields.add("campaign_id");
    openapiFields.add("use_type");
    openapiFields.add("fsc");
    openapiFields.add("status");
    openapiFields.add("failure_reason");
    openapiFields.add("object");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("color");
    openapiRequiredFields.add("to");
    openapiRequiredFields.add("carrier");
    openapiRequiredFields.add("from");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("use_type");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to NoExtraService
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!NoExtraService.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NoExtraService is not found in the empty JSON string", NoExtraService.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NoExtraService.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("description").isJsonNull() && (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("tracking_events") != null && !jsonObj.get("tracking_events").isJsonNull()) {
        JsonArray jsonArraytrackingEvents = jsonObj.getAsJsonArray("tracking_events");
        if (jsonArraytrackingEvents != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tracking_events").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tracking_events` to be an array in the JSON string but got `%s`", jsonObj.get("tracking_events").toString()));
          }

          // validate the optional field `tracking_events` (array)
          for (int i = 0; i < jsonArraytrackingEvents.size(); i++) {
            TrackingEventNormal.validateJsonObject(jsonArraytrackingEvents.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("cards") != null && !jsonObj.get("cards").isJsonNull()) {
        JsonArray jsonArraycards = jsonObj.getAsJsonArray("cards");
        if (jsonArraycards != null) {
          // ensure the json data is an array
          if (!jsonObj.get("cards").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `cards` to be an array in the JSON string but got `%s`", jsonObj.get("cards").toString()));
          }

          // validate the optional field `cards` (array)
          for (int i = 0; i < jsonArraycards.size(); i++) {
            Card.validateJsonObject(jsonArraycards.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("buckslips") != null && !jsonObj.get("buckslips").isJsonNull()) {
        JsonArray jsonArraybuckslips = jsonObj.getAsJsonArray("buckslips");
        if (jsonArraybuckslips != null) {
          // ensure the json data is an array
          if (!jsonObj.get("buckslips").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `buckslips` to be an array in the JSON string but got `%s`", jsonObj.get("buckslips").toString()));
          }

          // validate the optional field `buckslips` (array)
          for (int i = 0; i < jsonArraybuckslips.size(); i++) {
            Buckslip.validateJsonObject(jsonArraybuckslips.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `custom_envelope`
      if (jsonObj.get("custom_envelope") != null && !jsonObj.get("custom_envelope").isJsonNull()) {
        CustomEnvelopeReturned.validateJsonObject(jsonObj.getAsJsonObject("custom_envelope"));
      }
      if (!jsonObj.get("carrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier").toString()));
      }
      if (jsonObj.get("thumbnails") != null && !jsonObj.get("thumbnails").isJsonNull()) {
        JsonArray jsonArraythumbnails = jsonObj.getAsJsonArray("thumbnails");
        if (jsonArraythumbnails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("thumbnails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `thumbnails` to be an array in the JSON string but got `%s`", jsonObj.get("thumbnails").toString()));
          }

          // validate the optional field `thumbnails` (array)
          for (int i = 0; i < jsonArraythumbnails.size(); i++) {
            Thumbnail.validateJsonObject(jsonArraythumbnails.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `template_id`
      if (jsonObj.get("template_id") != null && !jsonObj.get("template_id").isJsonNull()) {
        Object.validateJsonObject(jsonObj.getAsJsonObject("template_id"));
      }
      // validate the optional field `template_version_id`
      if (jsonObj.get("template_version_id") != null && !jsonObj.get("template_version_id").isJsonNull()) {
        String.validateJsonObject(jsonObj.getAsJsonObject("template_version_id"));
      }
      if (!jsonObj.get("campaign_id").isJsonNull() && (jsonObj.get("campaign_id") != null && !jsonObj.get("campaign_id").isJsonNull()) && !jsonObj.get("campaign_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaign_id").toString()));
      }
      // validate the optional field `failure_reason`
      if (jsonObj.get("failure_reason") != null && !jsonObj.get("failure_reason").isJsonNull()) {
        FailureReason.validateJsonObject(jsonObj.getAsJsonObject("failure_reason"));
      }
      if ((jsonObj.get("object") != null && !jsonObj.get("object").isJsonNull()) && !jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NoExtraService.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NoExtraService' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NoExtraService> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NoExtraService.class));

       return (TypeAdapter<T>) new TypeAdapter<NoExtraService>() {
           @Override
           public void write(JsonWriter out, NoExtraService value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public NoExtraService read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             NoExtraService instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of NoExtraService given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of NoExtraService
  * @throws IOException if the JSON string is invalid with respect to NoExtraService
  */
  public static NoExtraService fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NoExtraService.class);
  }

 /**
  * Convert an instance of NoExtraService to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

